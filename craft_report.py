import pandas as pd
import glob







def get_geneset_to_acc(result_folder:str) -> dict:
    """Get Gene Set and their associated ACC from results files generated by classifiers
    
    Args:
        - result_folder (str) : path to the folder containing the results files

    Returns:
        - (dict) : name of gene set associated to an accuracy
    
    """

    # init dict
    geneset_to_acc = {}
    
    # loop over result files
    result_files = glob.glob(f"{result_folder}/*.csv")
    for rf in result_files:

        # extract gene name
        geneset = rf.split("/")[-1].replace("_log_clf.csv", "")

        # get acc from results
        df = pd.read_csv(rf)
        df = df[df['METRIC'] == 'ACC']
        acc = list(df['VALUE'])[0]

        # update dict
        geneset_to_acc[geneset] = acc

    # return dict
    return geneset_to_acc
        

def get_geneset_to_auc(result_folder:str) -> dict:
    """Get Gene Set and their associated AUC from results files generated by classifiers
    
    Args:
        - result_folder (str) : path to the folder containing the results files

    Returns:
        - (dict) : name of gene set associated to an auc
    
    """

    # init dict
    geneset_to_acc = {}
    
    # loop over result files
    result_files = glob.glob(f"{result_folder}/*.csv")
    for rf in result_files:

        # extract gene name
        geneset = rf.split("/")[-1].replace("_log_clf.csv", "")

        # get acc from results
        df = pd.read_csv(rf)
        df = df[df['METRIC'] == 'AUC']
        acc = list(df['VALUE'])[0]

        # update dict
        geneset_to_acc[geneset] = acc

    # return dict
    return geneset_to_acc
    








if __name__ == "__main__":

    m = get_geneset_to_auc("/tmp/zogzogzog/results")
    print(m)

    
